// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "bsconfig_shpath.proto" (package "ec.ShPath", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ec.ShPath.shPath
 */
export interface shPath {
    /**
     * @generated from protobuf field: optional string req_ip_sh = 22;
     */
    reqIpSh?: string;
    /**
     * @generated from protobuf field: optional string res_ip_sh = 23;
     */
    resIpSh?: string;
    /**
     * @generated from protobuf field: optional string req_ip_3399_sh = 24;
     */
    reqIp3399Sh?: string;
    /**
     * @generated from protobuf field: optional string res_ip_3399_sh = 25;
     */
    resIp3399Sh?: string;
    /**
     * @generated from protobuf field: optional string req_ntp_sh = 26;
     */
    reqNtpSh?: string;
    /**
     * @generated from protobuf field: optional string res_ntp_sh = 27;
     */
    resNtpSh?: string;
    /**
     * @generated from protobuf field: optional string req_ntp_3399_sh = 28;
     */
    reqNtp3399Sh?: string;
    /**
     * @generated from protobuf field: optional string res_ntp_3399_sh = 29;
     */
    resNtp3399Sh?: string;
    /**
     * @generated from protobuf field: optional string req_domainid_sh = 30;
     */
    reqDomainidSh?: string;
    /**
     * @generated from protobuf field: optional string res_domainid_sh = 31;
     */
    resDomainidSh?: string;
    /**
     * @generated from protobuf field: optional string req_deviceid_sh = 32;
     */
    reqDeviceidSh?: string;
    /**
     * @generated from protobuf field: optional string res_deviceid_sh = 33;
     */
    resDeviceidSh?: string;
    /**
     * @generated from protobuf field: optional string req_reboot_time_sh = 34;
     */
    reqRebootTimeSh?: string;
    /**
     * @generated from protobuf field: optional string res_reboot_time_sh = 35;
     */
    resRebootTimeSh?: string;
    /**
     * @generated from protobuf field: optional string req_device_info_sh = 36;
     */
    reqDeviceInfoSh?: string;
    /**
     * @generated from protobuf field: optional string autostartup_sh = 37;
     */
    autostartupSh?: string;
    /**
     * @generated from protobuf field: optional string req_ota_sh = 38;
     */
    reqOtaSh?: string;
    /**
     * @generated from protobuf field: optional string res_ota_sh = 39;
     */
    resOtaSh?: string;
    /**
     * @generated from protobuf field: optional string upgrade_ota = 40;
     */
    upgradeOta?: string;
    /**
     * @generated from protobuf field: optional string req_radar_sh = 41;
     */
    reqRadarSh?: string;
    /**
     * @generated from protobuf field: optional string res_radar_sh = 42;
     */
    resRadarSh?: string;
    /**
     * @generated from protobuf field: optional string req_log_sh = 43;
     */
    reqLogSh?: string;
    /**
     * @generated from protobuf field: optional string config_log_type = 44;
     */
    configLogType?: string;
    /**
     * @generated from protobuf field: optional string req_log_list_sh = 45;
     */
    reqLogListSh?: string;
    /**
     * @generated from protobuf field: optional string get_log_type = 46;
     */
    getLogType?: string;
    /**
     * @generated from protobuf field: optional string export_conf_sh = 47;
     */
    exportConfSh?: string;
    /**
     * @generated from protobuf field: optional string import_conf_sh = 48;
     */
    importConfSh?: string;
    /**
     * @generated from protobuf field: optional string get_roi_switch_sh = 49;
     */
    getRoiSwitchSh?: string;
    /**
     * @generated from protobuf field: optional string post_roi_switch_sh = 50;
     */
    postRoiSwitchSh?: string;
    /**
     * @generated from protobuf field: optional string set_radar_channel_sh = 51;
     */
    setRadarChannelSh?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class shPath$Type extends MessageType<shPath> {
    constructor() {
        super("ec.ShPath.shPath", [
            { no: 22, name: "req_ip_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 23, name: "res_ip_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 24, name: "req_ip_3399_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "res_ip_3399_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "req_ntp_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 27, name: "res_ntp_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 28, name: "req_ntp_3399_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 29, name: "res_ntp_3399_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 30, name: "req_domainid_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 31, name: "res_domainid_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 32, name: "req_deviceid_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 33, name: "res_deviceid_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 34, name: "req_reboot_time_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 35, name: "res_reboot_time_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 36, name: "req_device_info_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 37, name: "autostartup_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 38, name: "req_ota_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 39, name: "res_ota_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 40, name: "upgrade_ota", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 41, name: "req_radar_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 42, name: "res_radar_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 43, name: "req_log_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 44, name: "config_log_type", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 45, name: "req_log_list_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 46, name: "get_log_type", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 47, name: "export_conf_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 48, name: "import_conf_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 49, name: "get_roi_switch_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 50, name: "post_roi_switch_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 51, name: "set_radar_channel_sh", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<shPath>): shPath {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<shPath>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: shPath): shPath {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string req_ip_sh */ 22:
                    message.reqIpSh = reader.string();
                    break;
                case /* optional string res_ip_sh */ 23:
                    message.resIpSh = reader.string();
                    break;
                case /* optional string req_ip_3399_sh */ 24:
                    message.reqIp3399Sh = reader.string();
                    break;
                case /* optional string res_ip_3399_sh */ 25:
                    message.resIp3399Sh = reader.string();
                    break;
                case /* optional string req_ntp_sh */ 26:
                    message.reqNtpSh = reader.string();
                    break;
                case /* optional string res_ntp_sh */ 27:
                    message.resNtpSh = reader.string();
                    break;
                case /* optional string req_ntp_3399_sh */ 28:
                    message.reqNtp3399Sh = reader.string();
                    break;
                case /* optional string res_ntp_3399_sh */ 29:
                    message.resNtp3399Sh = reader.string();
                    break;
                case /* optional string req_domainid_sh */ 30:
                    message.reqDomainidSh = reader.string();
                    break;
                case /* optional string res_domainid_sh */ 31:
                    message.resDomainidSh = reader.string();
                    break;
                case /* optional string req_deviceid_sh */ 32:
                    message.reqDeviceidSh = reader.string();
                    break;
                case /* optional string res_deviceid_sh */ 33:
                    message.resDeviceidSh = reader.string();
                    break;
                case /* optional string req_reboot_time_sh */ 34:
                    message.reqRebootTimeSh = reader.string();
                    break;
                case /* optional string res_reboot_time_sh */ 35:
                    message.resRebootTimeSh = reader.string();
                    break;
                case /* optional string req_device_info_sh */ 36:
                    message.reqDeviceInfoSh = reader.string();
                    break;
                case /* optional string autostartup_sh */ 37:
                    message.autostartupSh = reader.string();
                    break;
                case /* optional string req_ota_sh */ 38:
                    message.reqOtaSh = reader.string();
                    break;
                case /* optional string res_ota_sh */ 39:
                    message.resOtaSh = reader.string();
                    break;
                case /* optional string upgrade_ota */ 40:
                    message.upgradeOta = reader.string();
                    break;
                case /* optional string req_radar_sh */ 41:
                    message.reqRadarSh = reader.string();
                    break;
                case /* optional string res_radar_sh */ 42:
                    message.resRadarSh = reader.string();
                    break;
                case /* optional string req_log_sh */ 43:
                    message.reqLogSh = reader.string();
                    break;
                case /* optional string config_log_type */ 44:
                    message.configLogType = reader.string();
                    break;
                case /* optional string req_log_list_sh */ 45:
                    message.reqLogListSh = reader.string();
                    break;
                case /* optional string get_log_type */ 46:
                    message.getLogType = reader.string();
                    break;
                case /* optional string export_conf_sh */ 47:
                    message.exportConfSh = reader.string();
                    break;
                case /* optional string import_conf_sh */ 48:
                    message.importConfSh = reader.string();
                    break;
                case /* optional string get_roi_switch_sh */ 49:
                    message.getRoiSwitchSh = reader.string();
                    break;
                case /* optional string post_roi_switch_sh */ 50:
                    message.postRoiSwitchSh = reader.string();
                    break;
                case /* optional string set_radar_channel_sh */ 51:
                    message.setRadarChannelSh = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: shPath, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string req_ip_sh = 22; */
        if (message.reqIpSh !== undefined)
            writer.tag(22, WireType.LengthDelimited).string(message.reqIpSh);
        /* optional string res_ip_sh = 23; */
        if (message.resIpSh !== undefined)
            writer.tag(23, WireType.LengthDelimited).string(message.resIpSh);
        /* optional string req_ip_3399_sh = 24; */
        if (message.reqIp3399Sh !== undefined)
            writer.tag(24, WireType.LengthDelimited).string(message.reqIp3399Sh);
        /* optional string res_ip_3399_sh = 25; */
        if (message.resIp3399Sh !== undefined)
            writer.tag(25, WireType.LengthDelimited).string(message.resIp3399Sh);
        /* optional string req_ntp_sh = 26; */
        if (message.reqNtpSh !== undefined)
            writer.tag(26, WireType.LengthDelimited).string(message.reqNtpSh);
        /* optional string res_ntp_sh = 27; */
        if (message.resNtpSh !== undefined)
            writer.tag(27, WireType.LengthDelimited).string(message.resNtpSh);
        /* optional string req_ntp_3399_sh = 28; */
        if (message.reqNtp3399Sh !== undefined)
            writer.tag(28, WireType.LengthDelimited).string(message.reqNtp3399Sh);
        /* optional string res_ntp_3399_sh = 29; */
        if (message.resNtp3399Sh !== undefined)
            writer.tag(29, WireType.LengthDelimited).string(message.resNtp3399Sh);
        /* optional string req_domainid_sh = 30; */
        if (message.reqDomainidSh !== undefined)
            writer.tag(30, WireType.LengthDelimited).string(message.reqDomainidSh);
        /* optional string res_domainid_sh = 31; */
        if (message.resDomainidSh !== undefined)
            writer.tag(31, WireType.LengthDelimited).string(message.resDomainidSh);
        /* optional string req_deviceid_sh = 32; */
        if (message.reqDeviceidSh !== undefined)
            writer.tag(32, WireType.LengthDelimited).string(message.reqDeviceidSh);
        /* optional string res_deviceid_sh = 33; */
        if (message.resDeviceidSh !== undefined)
            writer.tag(33, WireType.LengthDelimited).string(message.resDeviceidSh);
        /* optional string req_reboot_time_sh = 34; */
        if (message.reqRebootTimeSh !== undefined)
            writer.tag(34, WireType.LengthDelimited).string(message.reqRebootTimeSh);
        /* optional string res_reboot_time_sh = 35; */
        if (message.resRebootTimeSh !== undefined)
            writer.tag(35, WireType.LengthDelimited).string(message.resRebootTimeSh);
        /* optional string req_device_info_sh = 36; */
        if (message.reqDeviceInfoSh !== undefined)
            writer.tag(36, WireType.LengthDelimited).string(message.reqDeviceInfoSh);
        /* optional string autostartup_sh = 37; */
        if (message.autostartupSh !== undefined)
            writer.tag(37, WireType.LengthDelimited).string(message.autostartupSh);
        /* optional string req_ota_sh = 38; */
        if (message.reqOtaSh !== undefined)
            writer.tag(38, WireType.LengthDelimited).string(message.reqOtaSh);
        /* optional string res_ota_sh = 39; */
        if (message.resOtaSh !== undefined)
            writer.tag(39, WireType.LengthDelimited).string(message.resOtaSh);
        /* optional string upgrade_ota = 40; */
        if (message.upgradeOta !== undefined)
            writer.tag(40, WireType.LengthDelimited).string(message.upgradeOta);
        /* optional string req_radar_sh = 41; */
        if (message.reqRadarSh !== undefined)
            writer.tag(41, WireType.LengthDelimited).string(message.reqRadarSh);
        /* optional string res_radar_sh = 42; */
        if (message.resRadarSh !== undefined)
            writer.tag(42, WireType.LengthDelimited).string(message.resRadarSh);
        /* optional string req_log_sh = 43; */
        if (message.reqLogSh !== undefined)
            writer.tag(43, WireType.LengthDelimited).string(message.reqLogSh);
        /* optional string config_log_type = 44; */
        if (message.configLogType !== undefined)
            writer.tag(44, WireType.LengthDelimited).string(message.configLogType);
        /* optional string req_log_list_sh = 45; */
        if (message.reqLogListSh !== undefined)
            writer.tag(45, WireType.LengthDelimited).string(message.reqLogListSh);
        /* optional string get_log_type = 46; */
        if (message.getLogType !== undefined)
            writer.tag(46, WireType.LengthDelimited).string(message.getLogType);
        /* optional string export_conf_sh = 47; */
        if (message.exportConfSh !== undefined)
            writer.tag(47, WireType.LengthDelimited).string(message.exportConfSh);
        /* optional string import_conf_sh = 48; */
        if (message.importConfSh !== undefined)
            writer.tag(48, WireType.LengthDelimited).string(message.importConfSh);
        /* optional string get_roi_switch_sh = 49; */
        if (message.getRoiSwitchSh !== undefined)
            writer.tag(49, WireType.LengthDelimited).string(message.getRoiSwitchSh);
        /* optional string post_roi_switch_sh = 50; */
        if (message.postRoiSwitchSh !== undefined)
            writer.tag(50, WireType.LengthDelimited).string(message.postRoiSwitchSh);
        /* optional string set_radar_channel_sh = 51; */
        if (message.setRadarChannelSh !== undefined)
            writer.tag(51, WireType.LengthDelimited).string(message.setRadarChannelSh);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ec.ShPath.shPath
 */
export const shPath = new shPath$Type();
